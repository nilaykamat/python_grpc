# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import carrier_pb2 as carrier__pb2


class CarrierStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCarrier = channel.unary_unary(
        '/Carrier/GetCarrier',
        request_serializer=carrier__pb2.GetCarrierRequest.SerializeToString,
        response_deserializer=carrier__pb2.CarrierItem.FromString,
        )


class CarrierServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCarrier(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CarrierServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCarrier': grpc.unary_unary_rpc_method_handler(
          servicer.GetCarrier,
          request_deserializer=carrier__pb2.GetCarrierRequest.FromString,
          response_serializer=carrier__pb2.CarrierItem.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Carrier', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
