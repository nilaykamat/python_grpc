# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import article_pb2 as article__pb2


class ArticleStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetArticle = channel.unary_unary(
        '/Article/GetArticle',
        request_serializer=article__pb2.UserId.SerializeToString,
        response_deserializer=article__pb2.ArticlesResponse.FromString,
        )


class ArticleServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetArticle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ArticleServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetArticle': grpc.unary_unary_rpc_method_handler(
          servicer.GetArticle,
          request_deserializer=article__pb2.UserId.FromString,
          response_serializer=article__pb2.ArticlesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Article', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
